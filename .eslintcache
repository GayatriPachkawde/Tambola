[{"C:\\Users\\Acer\\tambola\\src\\index.js":"1","C:\\Users\\Acer\\tambola\\src\\App.js":"2","C:\\Users\\Acer\\tambola\\src\\reportWebVitals.js":"3","C:\\Users\\Acer\\tambola\\src\\Components\\HomePage\\Home.js":"4","C:\\Users\\Acer\\tambola\\src\\Components\\Instruction\\Instruction.js":"5","C:\\Users\\Acer\\tambola\\src\\Components\\Login\\Login.js":"6","C:\\Users\\Acer\\tambola\\src\\Components\\Login\\Signup.js":"7","C:\\Users\\Acer\\tambola\\src\\Components\\Login\\Form.js":"8","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\RoomCode.js":"9","C:\\Users\\Acer\\tambola\\src\\Components\\Handlers\\TicketHandlers.js":"10","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Gameroom\\GameRoom.js":"11","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Createroom\\CreateRoom.js":"12","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Joinroom\\JoinRoom.js":"13","C:\\Users\\Acer\\tambola\\src\\Components\\Ball\\Balls.js":"14","C:\\Users\\Acer\\tambola\\src\\Components\\Ball\\balldata.js":"15","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Chat\\Chat.js":"16","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Players\\Players.js":"17"},{"size":449,"mtime":1609576728913,"results":"18","hashOfConfig":"19"},{"size":3761,"mtime":1610429912480,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1433,"mtime":1609903463181,"results":"22","hashOfConfig":"19"},{"size":802,"mtime":1610450098617,"results":"23","hashOfConfig":"19"},{"size":1925,"mtime":1610198607875,"results":"24","hashOfConfig":"19"},{"size":305,"mtime":1610252847716,"results":"25","hashOfConfig":"19"},{"size":872,"mtime":1608293073409,"results":"26","hashOfConfig":"19"},{"size":4251,"mtime":1609942572605,"results":"27","hashOfConfig":"19"},{"size":2800,"mtime":1609648064282,"results":"28","hashOfConfig":"19"},{"size":5451,"mtime":1610318246296,"results":"29","hashOfConfig":"19"},{"size":1684,"mtime":1610275063083,"results":"30","hashOfConfig":"19"},{"size":1639,"mtime":1610255238656,"results":"31","hashOfConfig":"19"},{"size":648,"mtime":1609826446827,"results":"32","hashOfConfig":"19"},{"size":448,"mtime":1609826133520,"results":"33","hashOfConfig":"19"},{"size":2105,"mtime":1610279905284,"results":"34","hashOfConfig":"19"},{"size":616,"mtime":1610315274239,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1fiqjwt",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"C:\\Users\\Acer\\tambola\\src\\index.js",[],["79","80"],"C:\\Users\\Acer\\tambola\\src\\App.js",["81"],"import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, withRouter } from \"react-router-dom\";\nimport Home from \"./Components/HomePage/Home\";\nimport CreateRoom from \"./Components/Room/Createroom/CreateRoom\";\nimport JoinRoom from \"./Components/Room/Joinroom/JoinRoom\";\nimport Instruction from \"./Components/Instruction/Instruction\";\nimport Login from \"./Components/Login/Login\";\nimport GameRoom from \"./Components/Room/Gameroom/GameRoom\";\nconst io = require(\"socket.io-client\");\n\nfunction App() {\n  const [loggedIn, setloggedIn] = useState(false);\n  const [error, seterror] = useState(undefined);\n  const [socket, setsocket] = useState(null);\n\n  const setupSocket = () => {\n    const token = localStorage.getItem(\"CC_TOKEN\");\n\n    if (token && !socket) {\n      const connectionOptions = {\n        \"force new connection\": true,\n        reconnectionAttempts: \"Infinity\",\n        timeout: 10000,\n        transports: [\"websocket\"],\n        query: {\n          token: localStorage.getItem(\"CC_TOKEN\"),\n        },\n      };\n\n      const newSocket = io(\"http://localhost:8000\", connectionOptions);\n\n      newSocket.on(\"disconnect\", () => {\n        setsocket(null);\n        setTimeout(setupSocket, 3000);\n      });\n\n      newSocket.on(\"connection\", () => {\n        console.log(\"Socket connected\");\n      });\n\n      setsocket(newSocket);\n    }\n  };\n\n  useEffect(() => {\n    setupSocket();\n    //eslint-disable-next-line\n  }, []);\n\n  const loginHandler = (name, password) => {\n    fetch(\"http://localhost:8000/user/login\", {\n      method: \"POST\",\n      body: JSON.stringify({ name, password }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.message === \"Username/Password did not match\") {\n          seterror(r.message);\n        } else {\n          localStorage.setItem(\"username\", name);\n          localStorage.setItem(\"CC_TOKEN\", r.token);\n          setloggedIn(true);\n          setupSocket();\n        }\n      });\n  };\n\n  const signupHandler = (name, password) => {\n    fetch(\"http://localhost:8000/user/register\", {\n      method: \"POST\",\n      body: JSON.stringify({ name, password }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.message === \"User registered successfully\") {\n          // localStorage.setItem(\"username\", name);\n          // localStorage.setItem(\"CC_TOKEN\", r.token);\n          // setloggedIn(true);\n          return;\n        } else {\n          seterror(r.message);\n        }\n      });\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"CC_TOKEN\");\n    setloggedIn(false);\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"CC_TOKEN\");\n\n    if (token) {\n      setloggedIn(true);\n    }\n  }, []);\n  return (\n    <div className=\"main\">\n      {loggedIn ? (\n        <Router>\n          <Route exact path=\"/\">\n            <Home handler={logout} />\n          </Route>\n\n          <Route exact path=\"/create-room\">\n            <CreateRoom socket={socket} />\n          </Route>\n\n          <Route exact path=\"/join-room\">\n            <JoinRoom socket={socket} />\n          </Route>\n\n          <Route exact path=\"/instruction\">\n            <Instruction name=\"gayu\" socket={socket}>\n              Heyy There\n            </Instruction>\n          </Route>\n\n          <Route\n            path=\"/game-room/:id\"\n            render={() => <GameRoom socket={socket} />}\n            exact\n          />\n        </Router>\n      ) : (\n        <Login\n          loginHandler={loginHandler}\n          signupHandler={signupHandler}\n          err={error}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Acer\\tambola\\src\\reportWebVitals.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\HomePage\\Home.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\Instruction\\Instruction.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\Login\\Login.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\Login\\Signup.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\Login\\Form.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\Room\\RoomCode.js",["82"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RoomCode = (props) => {\r\n  const [roomcode, setroomCode] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\r\n  const [error, setError] = useState();\r\n  const setInputInArray = (e, idx) => {\r\n    const newArr = [...roomcode];\r\n    newArr[idx] = e.target.value;\r\n    setroomCode(newArr);\r\n  };\r\n\r\n  const [id, setId] = useState();\r\n\r\n  const joinRoom = () => {\r\n    const name = roomcode.join(\"\");\r\n    fetch(\"http://localhost:8000/gameroom/getRoom\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"CC_TOKEN\"),\r\n        name,\r\n      },\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        if (r.error) {\r\n          throw \"error\";\r\n        }\r\n        if (r.id) {\r\n          setId(r.id);\r\n          setError(\"\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError(\"Gameroom does not exist.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"rc-container\">\r\n      <h2 className=\"rc-title\">Enter Room Code</h2>\r\n      <div className=\"code-container\">\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"1\"\r\n          id=\"1\"\r\n          autoFocus\r\n          onKeyUpCapture={(e) => {\r\n            if (e.keyCode === 8) {\r\n              document.getElementById(\"1\").focus();\r\n            } else {\r\n              document.getElementById(\"2\").focus();\r\n            }\r\n          }}\r\n          autocomplete=\"off\"\r\n          className=\"brown-bg\"\r\n          onChange={(e) => setInputInArray(e, 0)}\r\n          value={roomcode[0]}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"1\"\r\n          id=\"2\"\r\n          autocomplete=\"off\"\r\n          onKeyUpCapture={(e) => {\r\n            if (e.keyCode === 8) {\r\n              document.getElementById(\"1\").focus();\r\n            } else {\r\n              document.getElementById(\"3\").focus();\r\n            }\r\n          }}\r\n          className=\"brown-bg\"\r\n          onChange={(e) => setInputInArray(e, 1)}\r\n          value={roomcode[1]}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"1\"\r\n          id=\"3\"\r\n          autocomplete=\"off\"\r\n          onKeyUpCapture={(e) => {\r\n            if (e.keyCode === 8) {\r\n              document.getElementById(\"2\").focus();\r\n            } else {\r\n              document.getElementById(\"4\").focus();\r\n            }\r\n          }}\r\n          className=\"brown-bg\"\r\n          onChange={(e) => setInputInArray(e, 2)}\r\n          value={roomcode[2]}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"1\"\r\n          id=\"4\"\r\n          autocomplete=\"off\"\r\n          onKeyUpCapture={(e) => {\r\n            if (e.keyCode === 8) {\r\n              document.getElementById(\"3\").focus();\r\n            } else {\r\n              document.getElementById(\"5\").focus();\r\n            }\r\n          }}\r\n          className=\"brown-bg\"\r\n          onChange={(e) => setInputInArray(e, 3)}\r\n          value={roomcode[3]}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"1\"\r\n          id=\"5\"\r\n          autocomplete=\"off\"\r\n          onKeyUpCapture={(e) => {\r\n            if (e.keyCode === 8) {\r\n              document.getElementById(\"4\").focus();\r\n            } else {\r\n              document.getElementById(\"6\").focus();\r\n            }\r\n          }}\r\n          className=\"brown-bg\"\r\n          onChange={(e) => setInputInArray(e, 4)}\r\n          value={roomcode[4]}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"1\"\r\n          id=\"6\"\r\n          className=\"brown-bg\"\r\n          autocomplete=\"off\"\r\n          onChange={(e) => setInputInArray(e, 5)}\r\n          onKeyUpCapture={(e) => {\r\n            if (e.keyCode === 8) {\r\n              document.getElementById(\"5\").focus();\r\n            }\r\n          }}\r\n          value={roomcode[5]}\r\n          onKeyUp={joinRoom}\r\n        />\r\n      </div>\r\n      {error ? <div className=\"error\">{error}</div> : null}\r\n      <div className=\"jr-buttons\">\r\n        <Link to={\"/game-room/\" + id}>\r\n          <button disabled={id ? false : true}>Enter Room</button>\r\n        </Link>\r\n        <button onClick={props.handler}>Active Rooms</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomCode;\r\n","C:\\Users\\Acer\\tambola\\src\\Components\\Handlers\\TicketHandlers.js",[],["83","84"],"C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Gameroom\\GameRoom.js",["85","86","87","88","89","90"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./gameroom.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Chat from \"../Chat/Chat\";\r\nimport cross from \"../../icons/cross.ico\";\r\nimport Players from \"../Players/Players\";\r\n\r\nconst GameRoom = ({ match, location, socket }) => {\r\n  const [userId, setUserId] = useState(\"\");\r\n  const [admin, setAdmin] = useState(false);\r\n  const [showTikcet, setshowTicket] = useState(false);\r\n  const gameroomid = match.params.id;\r\n  const [clicked, setClicked] = useState([]);\r\n  const [time, setTime] = useState();\r\n  const [disabled, setDisabled] = useState([]);\r\n\r\n  const startTimer = () => {\r\n    if (socket) {\r\n      socket.emit(\"startTimer\", {\r\n        gameroomid,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"timerStarted\", (data) => {\r\n      setTime(data.time);\r\n    });\r\n  }, [time]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"beforeunload\", alertUser);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", alertUser);\r\n    };\r\n  }, []);\r\n  const alertUser = (e) => {\r\n    e.preventDefault();\r\n    e.returnValue = \"\";\r\n  };\r\n  const [row1, setrow1] = useState([]);\r\n  const [row2, setrow2] = useState([]);\r\n  const [row3, setrow3] = useState([]);\r\n\r\n  const getTicket = () => {\r\n    setshowTicket(true);\r\n    fetch(\"http://localhost:8000/gameroom/ticket\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ id: gameroomid }),\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"CC_TOKEN\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        const [ticketrow1, ticketrow2, ticketrow3] = [...r.ticket];\r\n        setrow1(ticketrow1);\r\n        setrow2(ticketrow2);\r\n        setrow3(ticketrow3);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"admin\", (data) => {\r\n        setAdmin(data.isadmin);\r\n      });\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"CC_TOKEN\");\r\n    if (token) {\r\n      const payload = JSON.parse(atob(token.split(\".\")[1]));\r\n      setUserId(payload.id);\r\n    }\r\n    if (socket) {\r\n      socket.emit(\"joinroom\", {\r\n        gameroomid,\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (socket) {\r\n        socket.emit(\"leaveroom\", {\r\n          gameroomid,\r\n          admin,\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const verifyTicket = () => {\r\n    const playerClicked = [...clicked];\r\n    if (playerClicked.length < 15) {\r\n      alert(\"not won\");\r\n    } else {\r\n      const verify = playerClicked.filter(\r\n        (ticket) =>\r\n          !row1.includes(ticket) &&\r\n          !row2.includes(ticket) &&\r\n          !row3.includes(ticket)\r\n      );\r\n\r\n      if (verify) {\r\n        alert(\"not won\");\r\n      } else {\r\n        alert(\"won\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const ticketClicked = (e) => {\r\n    const number = e.target.innerText;\r\n\r\n    if (number && !disabled.includes(number)) {\r\n      if (Number(number) === Number(time)) {\r\n        const tempArr = [...clicked];\r\n        if (!tempArr.includes(number)) {\r\n          tempArr.push(number);\r\n          setClicked(tempArr);\r\n        }\r\n      }\r\n      e.target.classList.add(\"cross\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"hp-mainDiv\">\r\n      <div className=\"countdown-timer\">\r\n        {admin ? <button onClick={startTimer}>Start Game</button> : null}\r\n        {time ? <div>{time}</div> : null}\r\n      </div>\r\n      {/* <Chat socket={socket} userId={userId} gameroomid={gameroomid} /> */}\r\n      <Players socket={socket} />\r\n      {showTikcet ? (\r\n        <div\r\n          className=\"ticket-container\"\r\n          onClick={(e) => {\r\n            ticketClicked(e);\r\n          }}\r\n        >\r\n          <div className=\"row\">\r\n            {row1.map((number, idx) => {\r\n              return number === 100 ? (\r\n                <>\r\n                  <div className={\"ticket-box\"}></div>\r\n                </>\r\n              ) : (\r\n                <div className={\"ticket-box\"}>\r\n                  <figure className=\"ticket-ball code\">{number}</figure>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"row\">\r\n            {\" \"}\r\n            {row2.map((number) => {\r\n              return number === 100 ? (\r\n                <>\r\n                  <div className={\"ticket-box\"}></div>\r\n                </>\r\n              ) : (\r\n                <div className={\"ticket-box\"}>\r\n                  <figure className=\"ticket-ball code\">{number}</figure>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"row\">\r\n            {\" \"}\r\n            {row3.map((number) => {\r\n              return number === 100 ? (\r\n                <>\r\n                  <div className={\"ticket-box\"}></div>\r\n                </>\r\n              ) : (\r\n                <div className={\"ticket-box\"}>\r\n                  <figure className=\"ticket-ball code\">{number}</figure>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <button className=\"ticket-btn\" onClick={getTicket}>\r\n          Ticket\r\n        </button>\r\n      )}\r\n\r\n      <div className=\"claim-buttons\">\r\n        <button onClick={() => verifyTicket()}>Claim Full House</button>\r\n        {/* <button>Claim first five</button> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(GameRoom);\r\n","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Createroom\\CreateRoom.js",["91"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./createRoom.css\";\r\nimport Balls from \"../../Ball/Balls\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst CreateRoom = (props) => {\r\n  const username = localStorage.getItem(\"username\");\r\n  const [id, setid] = useState();\r\n  const [code, setcode] = useState();\r\n  const [showEnterbutton, setshowEnterbutton] = useState(false);\r\n\r\n  const generateCode = () => {\r\n    const roomcode = Math.floor(100000 + Math.random() * 900000);\r\n    setcode(roomcode);\r\n    return roomcode;\r\n  };\r\n\r\n  const createRoom = () => {\r\n    generateCode();\r\n    setshowEnterbutton(true);\r\n    console.log(username);\r\n    fetch(\"http://localhost:8000/gameroom\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ name: generateCode(), username }),\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"CC_TOKEN\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        setid(r._id);\r\n      })\r\n      .catch((err) => {\r\n        setTimeout(createRoom, 3000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"cr-mainDiv blue-bg\">\r\n      <Balls />\r\n      <div className=\"jr-title\">CREATE ROOM</div>\r\n      <div className=\"cr-container\">\r\n        {showEnterbutton ? <div className=\"code\">{code}</div> : null}\r\n        {showEnterbutton ? (\r\n          <Link to={\"/game-room/\" + id}>\r\n            <button>Enter</button>\r\n          </Link>\r\n        ) : (\r\n          <button onClick={createRoom}>Generate Code</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(CreateRoom);\r\n","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Joinroom\\JoinRoom.js",["92"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./joinroom.css\";\r\nimport RoomCode from \".././RoomCode\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Balls from \"../../Ball/Balls\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst JoinRoom = (props) => {\r\n  const [gamerooms, setGamerooms] = useState([]);\r\n  const [showRooms, setshowRooms] = useState(false);\r\n\r\n  const getGamerooms = () => {\r\n    setshowRooms(true);\r\n    fetch(\"http://localhost:8000/gameroom\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"CC_TOKEN\"),\r\n      },\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        setGamerooms(r);\r\n      })\r\n      .catch((err) => {\r\n        setTimeout(getGamerooms, 3000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"jr-mainDiv blue-bg\">\r\n      <Balls />\r\n\r\n      <div className=\"jr-title\">Join Room</div>\r\n      {/* <button onClick={getGamerooms}>Show Rooms</button> */}\r\n      {showRooms ? (\r\n        <div className=\"gamerooms\">\r\n          {gamerooms.map((room) => {\r\n            return (\r\n              <div className=\"gameroom\">\r\n                <p className=\"code jr-code\">{room.name}</p>\r\n\r\n                <Link to={\"/game-room/\" + room._id}>\r\n                  <button className=\"join-btn\">\r\n                    Join <i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <RoomCode handler={getGamerooms} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(JoinRoom);\r\n","C:\\Users\\Acer\\tambola\\src\\Components\\Ball\\Balls.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\Ball\\balldata.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Chat\\Chat.js",["93"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Chat.css\";\r\n\r\nconst Chat = ({ socket, userId, gameroomid }) => {\r\n  const [newmessage, setmessage] = useState(\"\");\r\n  const [messages, setmessages] = useState([]);\r\n  const sendMessage = () => {\r\n    if (socket) {\r\n      socket.emit(\"GameroomMessage\", {\r\n        gameroomid,\r\n        message: newmessage,\r\n      });\r\n\r\n      setmessage(\"\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on(\"newMessage\", (data) => {\r\n      const msgArr = [...messages];\r\n      msgArr.push(data);\r\n      setmessages(msgArr);\r\n    });\r\n  }, [messages]);\r\n  return (\r\n    <div className=\"chat-box\">\r\n      <div className=\"messages-container\">\r\n        {messages.map((message) => {\r\n          return (\r\n            <div\r\n              className={\r\n                userId === message.userId\r\n                  ? \"message-container my-message-container\"\r\n                  : \"message-container not-my-message-container\"\r\n              }\r\n            >\r\n              <span className=\"message\">\r\n                {\" \"}\r\n                <span\r\n                  className={\r\n                    userId === message.userId\r\n                      ? \"myMessage message\"\r\n                      : \"notmyMessage message\"\r\n                  }\r\n                >\r\n                  <span className=\"sender-name\">\r\n                    {userId === message.userId ? \"Me\" : message.name}:\r\n                  </span>{\" \"}\r\n                  <span>{message.message}</span>\r\n                </span>\r\n              </span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"send-message\">\r\n        {\" \"}\r\n        <input\r\n          className=\"input-message\"\r\n          type=\"text\"\r\n          placeholder=\"Say something...\"\r\n          onChange={(event) => setmessage(event.target.value)}\r\n          value={newmessage}\r\n          autoFocus\r\n        ></input>\r\n        <div className=\"send\" onClick={sendMessage}>\r\n          <i class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Players\\Players.js",["94"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./players.css\";\r\n\r\nconst Players = ({ socket }) => {\r\n  const [players, setPlayers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (socket) {\r\n      socket.on(\"players\", (data) => {\r\n        setPlayers(data.players);\r\n      });\r\n    }\r\n  }, [players]);\r\n\r\n  return (\r\n    <div className=\"players\">\r\n      {players.map((player) => {\r\n        return (\r\n          <div className=\"user\">\r\n            <i className=\"fas fa-user fa-2x\"></i>\r\n            <p>{player}</p>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Players;\r\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":3,"column":42,"nodeType":"101","messageId":"102","endLine":3,"endColumn":52},{"ruleId":"103","severity":1,"message":"104","line":27,"column":11,"nodeType":"105","messageId":"106","endLine":27,"endColumn":25},{"ruleId":"95","replacedBy":"107"},{"ruleId":"97","replacedBy":"108"},{"ruleId":"99","severity":1,"message":"109","line":4,"column":8,"nodeType":"101","messageId":"102","endLine":4,"endColumn":12},{"ruleId":"99","severity":1,"message":"110","line":5,"column":8,"nodeType":"101","messageId":"102","endLine":5,"endColumn":13},{"ruleId":"99","severity":1,"message":"111","line":9,"column":10,"nodeType":"101","messageId":"102","endLine":9,"endColumn":16},{"ruleId":"99","severity":1,"message":"112","line":15,"column":20,"nodeType":"101","messageId":"102","endLine":15,"endColumn":31},{"ruleId":"113","severity":1,"message":"114","line":29,"column":6,"nodeType":"115","endLine":29,"endColumn":12,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"117","line":93,"column":6,"nodeType":"115","endLine":93,"endColumn":8,"suggestions":"118"},{"ruleId":"99","severity":1,"message":"119","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":26},{"ruleId":"99","severity":1,"message":"119","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"114","line":24,"column":6,"nodeType":"115","endLine":24,"endColumn":16,"suggestions":"120"},{"ruleId":"113","severity":1,"message":"114","line":13,"column":6,"nodeType":"115","endLine":13,"endColumn":15,"suggestions":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object",["122"],["123"],"'Chat' is defined but never used.","'cross' is defined but never used.","'userId' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.","ArrayExpression",["124"],"React Hook useEffect has missing dependencies: 'admin', 'gameroomid', and 'socket'. Either include them or remove the dependency array.",["125"],"'useEffect' is defined but never used.",["126"],["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},"Update the dependencies array to be: [socket, time]",{"range":"136","text":"137"},"Update the dependencies array to be: [admin, gameroomid, socket]",{"range":"138","text":"139"},"Update the dependencies array to be: [messages, socket]",{"range":"140","text":"141"},"Update the dependencies array to be: [players, socket]",{"range":"142","text":"143"},[862,868],"[socket, time]",[2403,2405],"[admin, gameroomid, socket]",[587,597],"[messages, socket]",[302,311],"[players, socket]"]