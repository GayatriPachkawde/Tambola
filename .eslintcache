[{"C:\\Users\\Acer\\tambola\\src\\index.js":"1","C:\\Users\\Acer\\tambola\\src\\App.js":"2","C:\\Users\\Acer\\tambola\\src\\reportWebVitals.js":"3","C:\\Users\\Acer\\tambola\\src\\Components\\HomePage\\Home.js":"4","C:\\Users\\Acer\\tambola\\src\\Components\\Instruction\\Instruction.js":"5","C:\\Users\\Acer\\tambola\\src\\Components\\Tickets\\Ticket.js":"6","C:\\Users\\Acer\\tambola\\src\\Components\\Login\\Login.js":"7","C:\\Users\\Acer\\tambola\\src\\Components\\Login\\Signup.js":"8","C:\\Users\\Acer\\tambola\\src\\Components\\Login\\Form.js":"9","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\RoomCode.js":"10","C:\\Users\\Acer\\tambola\\src\\Components\\Handlers\\TicketHandlers.js":"11","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Gameroom\\GameRoom.js":"12","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Createroom\\CreateRoom.js":"13","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Joinroom\\JoinRoom.js":"14","C:\\Users\\Acer\\tambola\\src\\Components\\Ball\\Balls.js":"15","C:\\Users\\Acer\\tambola\\src\\Components\\Ball\\balldata.js":"16"},{"size":449,"mtime":1609576728913,"results":"17","hashOfConfig":"18"},{"size":3925,"mtime":1609849823540,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":1433,"mtime":1609903463181,"results":"21","hashOfConfig":"18"},{"size":122,"mtime":1609576834338,"results":"22","hashOfConfig":"18"},{"size":294,"mtime":1608112584809,"results":"23","hashOfConfig":"18"},{"size":1924,"mtime":1609740601443,"results":"24","hashOfConfig":"18"},{"size":275,"mtime":1609648026098,"results":"25","hashOfConfig":"18"},{"size":872,"mtime":1608293073409,"results":"26","hashOfConfig":"18"},{"size":3289,"mtime":1609833974419,"results":"27","hashOfConfig":"18"},{"size":2800,"mtime":1609648064282,"results":"28","hashOfConfig":"18"},{"size":5293,"mtime":1609926716710,"results":"29","hashOfConfig":"18"},{"size":1716,"mtime":1609849959497,"results":"30","hashOfConfig":"18"},{"size":1695,"mtime":1609849784087,"results":"31","hashOfConfig":"18"},{"size":648,"mtime":1609826446827,"results":"32","hashOfConfig":"18"},{"size":448,"mtime":1609826133520,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1fiqjwt",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Acer\\tambola\\src\\index.js",[],["73","74"],"C:\\Users\\Acer\\tambola\\src\\App.js",["75"],"import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, withRouter } from \"react-router-dom\";\nimport Home from \"./Components/HomePage/Home\";\nimport CreateRoom from \"./Components/Room/Createroom/CreateRoom\";\nimport JoinRoom from \"./Components/Room/Joinroom/JoinRoom\";\nimport Instruction from \"./Components/Instruction/Instruction\";\nimport Login from \"./Components/Login/Login\";\nimport GameRoom from \"./Components/Room/Gameroom/GameRoom\";\nconst io = require(\"socket.io-client\");\n\nfunction App() {\n  const [loggedIn, setloggedIn] = useState(false);\n  const [error, seterror] = useState(undefined);\n  const [socket, setsocket] = useState(null);\n  const [isadmin, setisAdmin] = useState(false);\n\n  const setAdmin = () => {\n    setisAdmin(true);\n  };\n\n  const setAdminfalse = () => {\n    setisAdmin(false);\n  };\n\n  const setupSocket = () => {\n    const token = localStorage.getItem(\"CC_TOKEN\");\n\n    if (token && !socket) {\n      const connectionOptions = {\n        \"force new connection\": true,\n        reconnectionAttempts: \"Infinity\",\n        timeout: 10000,\n        transports: [\"websocket\"],\n        query: {\n          token: localStorage.getItem(\"CC_TOKEN\"),\n        },\n      };\n\n      const newSocket = io(\"http://localhost:8000\", connectionOptions);\n\n      newSocket.on(\"disconnect\", () => {\n        setsocket(null);\n        setTimeout(setupSocket, 3000);\n      });\n\n      newSocket.on(\"connection\", () => {\n        console.log(\"Socket connected\");\n      });\n\n      setsocket(newSocket);\n    }\n  };\n\n  useEffect(() => {\n    setupSocket();\n    //eslint-disable-next-line\n  }, []);\n\n  const loginHandler = (name, password) => {\n    fetch(\"http://localhost:8000/user/login\", {\n      method: \"POST\",\n      body: JSON.stringify({ name, password }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.message === \"Username/Password did not match\") {\n          seterror(r.message);\n        } else {\n          localStorage.setItem(\"username\", name);\n          localStorage.setItem(\"CC_TOKEN\", r.token);\n          setloggedIn(true);\n          setupSocket();\n        }\n      });\n  };\n\n  const signupHandler = (name, password) => {\n    fetch(\"http://localhost:8000/user/register\", {\n      method: \"POST\",\n      body: JSON.stringify({ name, password }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((r) => r.json())\n      .then((r) => {\n        if (r.message === \"User registered successfully\") {\n          // localStorage.setItem(\"username\", name);\n          // localStorage.setItem(\"CC_TOKEN\", r.token);\n          // setloggedIn(true);\n          return;\n        } else {\n          seterror(r.message);\n        }\n      });\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"CC_TOKEN\");\n    setloggedIn(false);\n  };\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"CC_TOKEN\");\n\n    if (token) {\n      setloggedIn(true);\n    }\n  }, []);\n  return (\n    <div className=\"main\">\n      {loggedIn ? (\n        <Router>\n          <Route exact path=\"/\">\n            <Home handler={logout} />\n          </Route>\n\n          <Route exact path=\"/create-room\">\n            <CreateRoom socket={socket} handler={setAdmin} />\n          </Route>\n\n          <Route exact path=\"/join-room\">\n            <JoinRoom socket={socket} handler={setAdminfalse} />\n          </Route>\n\n          <Route exact path=\"/instruction\">\n            <Instruction socket={socket} />\n          </Route>\n\n          <Route\n            path=\"/game-room/:id\"\n            render={() => <GameRoom socket={socket} isadmin={isadmin} />}\n            exact\n          />\n        </Router>\n      ) : (\n        <Login\n          loginHandler={loginHandler}\n          signupHandler={signupHandler}\n          err={error}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Acer\\tambola\\src\\reportWebVitals.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\HomePage\\Home.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\Instruction\\Instruction.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\Tickets\\Ticket.js",[],["76","77"],"C:\\Users\\Acer\\tambola\\src\\Components\\Login\\Login.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\Login\\Signup.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\Login\\Form.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\Room\\RoomCode.js",["78"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RoomCode = (props) => {\r\n  const [roomcode, setroomCode] = useState([\"\", \"\", \"\", \"\", \"\", \"\"]);\r\n  const [error, setError] = useState();\r\n  const setInputInArray = (e, idx) => {\r\n    const newArr = [...roomcode];\r\n    newArr[idx] = e.target.value;\r\n    setroomCode(newArr);\r\n  };\r\n\r\n  const [id, setId] = useState();\r\n\r\n  const joinRoom = () => {\r\n    const name = roomcode.join(\"\");\r\n    fetch(\"http://localhost:8000/gameroom/getRoom\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"CC_TOKEN\"),\r\n        name,\r\n      },\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        if (r.error) {\r\n          throw \"error\";\r\n        }\r\n        if (r.id) {\r\n          setId(r.id);\r\n          setError(\"\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError(\"Gameroom does not exist.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"rc-container\">\r\n      <h2 className=\"rc-title\">Enter Room Code</h2>\r\n      <div className=\"code-container\">\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"1\"\r\n          autoFocus\r\n          onKeyUpCapture={() => document.getElementById(\"2\").focus()}\r\n          autocomplete=\"off\"\r\n          className=\"brown-bg\"\r\n          onChange={(e) => setInputInArray(e, 0)}\r\n          value={roomcode[0]}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"1\"\r\n          id=\"2\"\r\n          autocomplete=\"off\"\r\n          onKeyUpCapture={() => document.getElementById(\"3\").focus()}\r\n          className=\"brown-bg\"\r\n          onChange={(e) => setInputInArray(e, 1)}\r\n          value={roomcode[1]}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"1\"\r\n          id=\"3\"\r\n          autocomplete=\"off\"\r\n          onKeyUpCapture={() => document.getElementById(\"4\").focus()}\r\n          className=\"brown-bg\"\r\n          onChange={(e) => setInputInArray(e, 2)}\r\n          value={roomcode[2]}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"1\"\r\n          id=\"4\"\r\n          autocomplete=\"off\"\r\n          onKeyUpCapture={() => document.getElementById(\"5\").focus()}\r\n          className=\"brown-bg\"\r\n          onChange={(e) => setInputInArray(e, 3)}\r\n          value={roomcode[3]}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"1\"\r\n          id=\"5\"\r\n          autocomplete=\"off\"\r\n          onKeyUpCapture={() => document.getElementById(\"6\").focus()}\r\n          className=\"brown-bg\"\r\n          onChange={(e) => setInputInArray(e, 4)}\r\n          value={roomcode[4]}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          maxLength=\"1\"\r\n          id=\"6\"\r\n          className=\"brown-bg\"\r\n          autocomplete=\"off\"\r\n          onChange={(e) => setInputInArray(e, 5)}\r\n          value={roomcode[5]}\r\n          onKeyUp={joinRoom}\r\n        />\r\n      </div>\r\n      {error ? <div className=\"error\">{error}</div> : null}\r\n      <div className=\"jr-buttons\">\r\n        <Link to={\"/game-room/\" + id}>\r\n          <button disabled={id ? false : true}>Enter Room</button>\r\n        </Link>\r\n        <button onClick={props.handler}>Active Rooms</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomCode;\r\n","C:\\Users\\Acer\\tambola\\src\\Components\\Handlers\\TicketHandlers.js",[],["79","80"],"C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Gameroom\\GameRoom.js",["81","82","83","84","85","86","87"],"C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Createroom\\CreateRoom.js",["88"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./createRoom.css\";\r\nimport Balls from \"../../Ball/Balls\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst CreateRoom = (props) => {\r\n  const [id, setid] = useState();\r\n  const [code, setcode] = useState();\r\n  const [showEnterbutton, setshowEnterbutton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    props.handler();\r\n  }, []);\r\n\r\n  const generateCode = () => {\r\n    const roomcode = Math.floor(100000 + Math.random() * 900000);\r\n    setcode(roomcode);\r\n    return roomcode;\r\n  };\r\n\r\n  const createRoom = () => {\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    generateCode();\r\n    setshowEnterbutton(true);\r\n    fetch(\"http://localhost:8000/gameroom\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({ name: generateCode(), username }),\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"CC_TOKEN\"),\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        setid(r._id);\r\n      })\r\n      .catch((err) => {\r\n        setTimeout(createRoom, 3000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"cr-mainDiv blue-bg\">\r\n      <Balls />\r\n      <div className=\"jr-title\">CREATE ROOM</div>\r\n      <div className=\"cr-container\">\r\n        {showEnterbutton ? <div className=\"code\">{code}</div> : null}\r\n        {showEnterbutton ? (\r\n          <Link to={\"/game-room/\" + id}>\r\n            <button>Enter</button>\r\n          </Link>\r\n        ) : (\r\n          <button onClick={createRoom}>Generate Code</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(CreateRoom);\r\n","C:\\Users\\Acer\\tambola\\src\\Components\\Room\\Joinroom\\JoinRoom.js",["89"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./joinroom.css\";\r\nimport RoomCode from \".././RoomCode\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Balls from \"../../Ball/Balls\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst JoinRoom = (props) => {\r\n  const [gamerooms, setGamerooms] = useState([]);\r\n  const [showRooms, setshowRooms] = useState(false);\r\n\r\n  const getGamerooms = () => {\r\n    setshowRooms(true);\r\n    fetch(\"http://localhost:8000/gameroom\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"CC_TOKEN\"),\r\n      },\r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        setGamerooms(r);\r\n      })\r\n      .catch((err) => {\r\n        setTimeout(getGamerooms, 3000);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.handler();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"jr-mainDiv blue-bg\">\r\n      <Balls />\r\n\r\n      <div className=\"jr-title\">Join Room</div>\r\n      {/* <button onClick={getGamerooms}>Show Rooms</button> */}\r\n      {showRooms ? (\r\n        <div className=\"gamerooms\">\r\n          {gamerooms.map((room) => {\r\n            return (\r\n              <div className=\"gameroom\">\r\n                <p className=\"code jr-code\">{room.name}</p>\r\n\r\n                <Link to={\"/game-room/\" + room._id}>\r\n                  <button className=\"join-btn\">\r\n                    Join <i class=\"fa fa-arrow-right\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <RoomCode handler={getGamerooms} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(JoinRoom);\r\n","C:\\Users\\Acer\\tambola\\src\\Components\\Ball\\Balls.js",[],"C:\\Users\\Acer\\tambola\\src\\Components\\Ball\\balldata.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":42,"nodeType":"96","messageId":"97","endLine":3,"endColumn":52},{"ruleId":"90","replacedBy":"98"},{"ruleId":"92","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":27,"column":11,"nodeType":"102","messageId":"103","endLine":27,"endColumn":25},{"ruleId":"90","replacedBy":"104"},{"ruleId":"92","replacedBy":"105"},{"ruleId":"94","severity":1,"message":"106","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":13},{"ruleId":"94","severity":1,"message":"107","line":8,"column":10,"nodeType":"96","messageId":"97","endLine":8,"endColumn":15},{"ruleId":"94","severity":1,"message":"108","line":9,"column":17,"nodeType":"96","messageId":"97","endLine":9,"endColumn":25},{"ruleId":"94","severity":1,"message":"109","line":10,"column":10,"nodeType":"96","messageId":"97","endLine":10,"endColumn":16},{"ruleId":"94","severity":1,"message":"110","line":10,"column":18,"nodeType":"96","messageId":"97","endLine":10,"endColumn":27},{"ruleId":"111","severity":1,"message":"112","line":19,"column":6,"nodeType":"113","endLine":19,"endColumn":8,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":85,"column":6,"nodeType":"113","endLine":85,"endColumn":23,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"117","line":14,"column":6,"nodeType":"113","endLine":14,"endColumn":8,"suggestions":"118"},{"ruleId":"111","severity":1,"message":"117","line":31,"column":6,"nodeType":"113","endLine":31,"endColumn":8,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar",["120"],["121"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object",["120"],["121"],"'cross' is defined but never used.","'admin' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'player' is assigned a value but never used.","'setPlayer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isadmin'. Either include it or remove the dependency array. If 'setAdmin' needs the current value of 'isadmin', you can also switch to useReducer instead of useState and read 'isadmin' in the reducer.","ArrayExpression",["122"],"React Hook useEffect has missing dependencies: 'gameroomid' and 'socket'. Either include them or remove the dependency array.",["123"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["124"],["125"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"130","fix":"132"},"Update the dependencies array to be: [isadmin]",{"range":"133","text":"134"},"Update the dependencies array to be: [gameroomid, messages, socket, users]",{"range":"135","text":"136"},"Update the dependencies array to be: [props]",{"range":"137","text":"138"},{"range":"139","text":"138"},[615,617],"[isadmin]",[2326,2343],"[gameroomid, messages, socket, users]",[435,437],"[props]",[840,842]]